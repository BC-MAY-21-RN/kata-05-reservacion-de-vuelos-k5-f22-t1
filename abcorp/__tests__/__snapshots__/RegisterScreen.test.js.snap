// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tests on the component RegisterScreen should display correctly 1`] = `
<View
  style={
    Object {
      "marginHorizontal": 20,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#5D60F0",
        "fontFamily": "Impact",
        "fontSize": 22,
        "fontWeight": "bold",
        "marginBottom": 20,
        "marginTop": 10,
      }
    }
  >
    Sign Up
  </Text>
  <View>
    <Text
      style={
        Object {
          "color": "black",
        }
      }
    >
      First Name
    </Text>
    <TextInput
      onChangeText={[Function]}
      style={
        Array [
          Object {
            "borderColor": "gray",
            "borderWidth": 1,
            "color": "black",
            "marginBottom": 10,
            "marginTop": 10,
            "padding": 10,
          },
          false,
        ]
      }
    />
    <Text
      style={
        Object {
          "color": "black",
        }
      }
    >
      Email
    </Text>
    <TextInput
      onChangeText={[Function]}
      style={
        Array [
          Object {
            "borderColor": "gray",
            "borderWidth": 1,
            "color": "black",
            "marginBottom": 10,
            "marginTop": 10,
            "padding": 10,
          },
          false,
        ]
      }
    />
    <Text
      style={
        Object {
          "color": "black",
        }
      }
    >
      Password
    </Text>
    <TextInput
      onChangeText={[Function]}
      secureTextEntry={true}
      style={
        Array [
          Object {
            "borderColor": "gray",
            "borderWidth": 1,
            "color": "black",
            "marginBottom": 10,
            "marginTop": 10,
            "padding": 10,
          },
          false,
        ]
      }
    />
    <Text
      style={
        Object {
          "color": "black",
          "fontSize": 13,
          "marginBottom": 10,
        }
      }
    >
      Use 8 or more characters with a mix of letters, numbers, and symbols.
    </Text>
  </View>
  <View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginBottom": 10,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "borderWidth": 1,
            "height": 25,
            "width": 25,
          }
        }
      />
      <Text
        style={
          Object {
            "color": "gray",
            "marginLeft": 10,
          }
        }
      >
        I agree to the Terms and Privacy Policy.
      </Text>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginBottom": 10,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "borderWidth": 1,
            "height": 25,
            "width": 25,
          }
        }
      />
      <Text
        style={
          Object {
            "color": "gray",
            "marginLeft": 10,
          }
        }
      >
        Subscribe for select product updated.
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0,0,0,0.2)",
        "borderRadius": 10,
        "height": 50,
        "justifyContent": "center",
        "marginTop": 20,
        "opacity": 1,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 21,
          "fontWeight": "bold",
        }
      }
    >
      Sign Up
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "marginVertical": 10,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "rgba(0,0,0,0.3)",
        }
      }
    >
      or
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0,0,0,0.2)",
        "borderRadius": 10,
        "flexDirection": "row",
        "height": 50,
        "justifyContent": "space-evenly",
        "marginTop": 20,
        "opacity": 1,
      }
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/img/google.png",
        }
      }
      style={
        Object {
          "height": 30,
          "width": 30,
        }
      }
    />
    <Text
      style={
        Object {
          "fontSize": 21,
          "fontWeight": "bold",
        }
      }
    >
      Sign Up with Google
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginVertical": 20,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "rgba(0,0,0,0.3)",
        }
      }
    >
      Already have an account?
    </Text>
    <Text
      style={
        Object {
          "color": "blue",
          "textDecorationLine": "underline",
        }
      }
    >
       Log in
    </Text>
  </View>
</View>
`;
